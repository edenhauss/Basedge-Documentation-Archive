class Command {
    constructor(command, description = null, cooldown = null, permissions = null, syntax = null, exampleUserMsg = null, exampleBotMsg = null, exampleTwitchMsg = null) {
        this.name = command.cmd;
        this.icon = command.icon;
        this.description = description;
        this.cooldown = cooldown;
        this.permissions = permissions;
        this.syntax = syntax;
        this.exampleUserMsg = exampleUserMsg;
        this.exampleBotMsg = exampleBotMsg;
        this.exampleTwitchMsg = exampleTwitchMsg;
    }

    getInfoTable() {
        let table = document.createElement("table");
        table.classList.add("infoTable");

        if (this.description !== null) {
            let tr = document.createElement("tr");
            let td = document.createElement("td");
            td.textContent = "–ö–æ–º–∞–Ω–¥–∞";
            tr.append(td);
            td = document.createElement("td");
            td.innerHTML = GetFormattedStringSpan(this.description);
            tr.append(td);
            table.append(tr);
        }
        if (this.cooldown !== null) {
            let tr = document.createElement("tr");
            let td = document.createElement("td");
            td.textContent = "Cooldown";
            tr.append(td);
            td = document.createElement("td");
            td.textContent = `${this.cooldown} —Å–µ–∫.`;
            tr.append(td);
            table.append(tr);
        }
        if (this.permissions !== null) {
            let tr = document.createElement("tr");
            let td = document.createElement("td");
            td.textContent = "–î–æ—Å—Ç—É–ø";
            tr.append(td);
            td = document.createElement("td");
            if (this.permissions.badges) {
                this.permissions.badges.forEach(b => {
                    td.append(CreateBadge(b));
                });
            }
            let spanUser = document.createElement("span");
            let spanUserMsg = document.createElement("span");
            spanUser.classList.add("permissions");
            spanUserMsg.textContent = this.permissions.msg;
            spanUserMsg.classList.add("permissionsMsg");
            td.append(spanUser, spanUserMsg, document.createElement("br"));

            tr.append(td);
            table.append(tr);
        }
        if (this.syntax !== null) {
            let tr = document.createElement("tr");
            let td = document.createElement("td");
            td.textContent = "–ù–∞–ø–∏—Å–∞–Ω–∏–µ";
            tr.append(td);
            td = document.createElement("td");
            td.innerHTML = GetFormattedStringSpan(this.syntax);
            tr.append(td);
            table.append(tr);
        }
        if ([this.exampleUserMsg, this.exampleBotMsg, this.exampleTwitchMsg].some((param) => param !== null)) {
            let tr = document.createElement("tr");
            let td = document.createElement("td");
            td.textContent = "–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è";
            tr.append(td);
            td = document.createElement("td");

            if (this.exampleUserMsg !== null) {
                if (this.exampleUserMsg.badges) {
                    this.exampleUserMsg.badges.forEach(b => {
                        td.append(CreateBadge(b));
                    });
                }
                let spanUser = document.createElement("span");
                let spanUserMsg = document.createElement("span");
                spanUser.textContent = "mooncat3:";
                spanUser.classList.add("exampleUsername");
                spanUserMsg.textContent = this.exampleUserMsg.msg;
                spanUserMsg.classList.add("exampleNicknameMsg");
                td.append(spanUser, spanUserMsg, document.createElement("br"));
            }
            if (this.exampleBotMsg !== null) {
                console.log(this.exampleBotMsg.msg);
                this.exampleBotMsg.msg.forEach(m => {
                    if (this.exampleBotMsg.badges) {
                        this.exampleBotMsg.badges.forEach(b => {
                            td.append(CreateBadge(b));
                        });
                    }
                    let spanBot = document.createElement("span");
                    let spanBotMsg = document.createElement("span");
                    spanBot.textContent = "BasedgeBot:";
                    spanBot.classList.add("exampleBot");
                    spanBotMsg.innerHTML = GetFormattedStringSpan(m);
                    spanBotMsg.classList.add("exampleBotMsg");
                    td.append(spanBot, spanBotMsg, document.createElement("br"));
                });
            }
            if (this.exampleTwitchMsg !== null) {
                let spanTwitchMsg = document.createElement("span");
                spanTwitchMsg.textContent = this.exampleTwitchMsg;
                spanTwitchMsg.classList.add("exampleTwitchMsg");
                td.append(spanTwitchMsg);
            }

            tr.append(td);
            table.append(tr);
        }
        return table;
    }
}

function CreateBadge(badge) {
    let badgeElem = document.createElement("img");
    badgeElem.classList.add("userIcon");
    badgeElem.src = badge.image;
    if (badge.title) {
        let tooltipElem;
        badgeElem.onmouseover = function () {
            tooltipElem = document.createElement('div');
            tooltipElem.className = 'tooltip';
            tooltipElem.textContent = badge.title;
            document.body.append(tooltipElem);
            const badgeCoords = badgeElem.getBoundingClientRect();
            const left = badgeCoords.left + (badgeElem.offsetWidth - tooltipElem.offsetWidth) / 2;
            const top = badgeCoords.top - tooltipElem.offsetHeight - 5;
            tooltipElem.style.left = left + 'px';
            tooltipElem.style.top = top + 'px';
        }

        badgeElem.onmouseout = function () {
            if (tooltipElem) {
                tooltipElem.remove();
                tooltipElem = null;
            }
        };
    }
    return badgeElem

}

const Badges = {
    mod: { image: "images/mod.png", title: "Moderator" },
    vip: { image: "images/vip.png", title: "VIP" },
    glitch: { image: "images/glitch.png", title: "GlitchCon 2020" },
    no_video: { image: "images/no-video.png", title: "Watching without video" },
    broadcaster: { image: "images/broadcaster.png", title: "Broadcaster" },
    sub: { image: "images/sub.png", title: "Subscriber" },
}

const CommandsList = [
    new Command({ cmd: "!color" }, "–¶–≤–µ—Ç –Ω–∏–∫–Ω–µ–π–º–∞", 3, { msg: "–í—Å–µ" }, "!—Ü–≤–µ—Ç",
        { msg: "!—Ü–≤–µ—Ç", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["&mooncat3, —Ç–≤–æ–π —Ü–≤–µ—Ç –°–∞–ª–∞—Ç–æ–≤—ã–π"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!forecast" }, "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 3 –¥–Ω—è", 30, { msg: "–í—Å–µ" }, "!–ø—Ä–æ–≥–Ω–æ–∑ [–æ–±—ä–µ–∫—Ç/–≥–æ—Ä–æ–¥/—Å—Ç—Ä–∞–Ω–∞]$region",
        { msg: "!–ø—Ä–æ–≥–Ω–æ–∑ –ú–æ—Å–∫–≤–∞", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è. –í—Ç–æ—Ä–Ω–∏–∫: +28¬∞C üå§ –û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏. –°—Ä–µ–¥–∞: +30¬∞C ‚òÅ –ü–∞—Å–º—É—Ä–Ω–æ. –ß–µ—Ç–≤–µ—Ä–≥: +29¬∞C üåß –ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!math" }, "–†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞", 5, { msg: "–í—Å–µ" }, "!math [–ª—é–±–æ–π –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä]$problem",
        { msg: "!math 2*2", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3,  2*2 = 4"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!weather" }, "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", 30, { msg: "–í—Å–µ" }, "!–ø–æ–≥–æ–¥–∞ [–æ–±—ä–µ–∫—Ç/–≥–æ—Ä–æ–¥/—Å—Ç—Ä–∞–Ω–∞]$region",
        { msg: "!–ø–æ–≥–æ–¥–∞ –ú–æ—Å–∫–≤–∞", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è. üïë –ú–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è - 18:15 üå° +27¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ +26¬∞C) üå§ –û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å - 41% üí® 1.6–º/—Å üåÜ –ó–∞–∫–∞—Ç –≤ 20:35"], badges: [Badges.mod, Badges.no_video]}),
];

const GameCommandsList = [
    new Command({ cmd: "!casino" }, "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –∫–∞–∑–∏–Ω–æ", 3, { msg: "–í—Å–µ" },"!–∫–∞–∑–∏–Ω–æ [—á–µ—Ä–Ω–æ–µ/–∂–µ–ª—Ç–æ–µ/–∫—Ä–∞—Å–Ω–æ–µ/–∑–µ–ª–µ–Ω–æ–µ]$bet [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã]$amount",
        { msg: "!–∫–∞–∑–∏–Ω–æ –∂–µ–ª—Ç–æ–µ 100", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, –≤—ã–ø–∞–¥–∞–µ—Ç x3 (–∂–µ–ª—Ç–æ–µ). –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ +300.0—Ä. –ë–∞–ª–∞–Ω—Å: 450.0—Ä"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!roulette" }, "–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞", 5, { badges: [Badges.vip, Badges.sub] },"!—Ä—É–ª–µ—Ç–∫–∞",
        { msg: "!—Ä—É–ª–µ—Ç–∫–∞", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3 –∂–º–µ—Ç –Ω–∞ –∫—É—Ä–æ–∫..."], badges: [Badges.mod, Badges.no_video]}, "basedgebot timed out mooncat3 for 60 seconds."),
    new Command({ cmd: "!slots" }, "–°–ª–æ—Ç—ã", 3, { msg: "–í—Å–µ" },"!—Å–ª–æ—Ç—ã [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã]$amount",
        { msg: "!—Å–ª–æ—Ç—ã 150", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, |üçí| |üçâ| |üçí| –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ -150.0—Ä. –ë–∞–ª–∞–Ω—Å: 300.0—Ä"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!trade" }, "–ê–∫—Ü–∏–∏", 3, { msg: "–í—Å–µ" },"!—Ç—Ä–µ–π–¥ [–≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑]$bet [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã]$amount",
        { msg: "!—Ç—Ä–µ–π–¥ –≤–Ω–∏–∑ 250", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, –∞–∫—Ü–∏–∏ –ø–æ—à–ª–∏ –≤–≤–µ—Ä—Ö üìà –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ +250.0—Ä. –ë–∞–ª–∞–Ω—Å 550.0—Ä"], badges: [Badges.mod, Badges.no_video]}),
];

const AdminCommandsList = [
    new Command({ cmd: "!add" }, "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–æ–º–∞–Ω–¥—É", 0, { badges: [Badges.mod] },"!add [–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã]$command [–∫–¥ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö]$cooldown [—Å–æ–æ–±—â–µ–Ω–∏–µ]$message",
        { msg: "!add !–≤–∫ 10 vk.com/me", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, –∫–æ–º–∞–Ω–¥–∞ !–≤–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∞"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!ban" }, "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 0, { badges: [Badges.mod] },"!ban [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]$user [–ø—Ä–∏—á–∏–Ω–∞]$reason",
        { msg: "!ban morange51 –ø-–≤–æ—Ä–¥", badges: [Badges.broadcaster, Badges.glitch] },
        null, "basedgebot banned morange51. Reason: –ø-–≤–æ—Ä–¥."),
    new Command({ cmd: "!block" }, "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", 0, { badges: [Badges.mod] },"!block [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]$user",
        { msg: "!block morange51", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, morange51 –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!del" }, "–£–¥–∞–ª–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–æ–º–∞–Ω–¥—É", 0, { badges: [Badges.mod] },"!del [–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã]$command",
        { msg: "!del !–≤–∫", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, –∫–æ–º–∞–Ω–¥–∞ !–≤–∫ —É–¥–∞–ª–µ–Ω–∞"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!info" }, "–ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∫–∞–Ω–∞–ª–∞", 0, { badges: [Badges.mod, Badges.vip, Badges.sub] },"!info",
        { msg: "!info", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["mooncat3, !—Ç–≥, !–¥—Å, !–∏–Ω—Å—Ç, !0"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!mute" }, "–¢–∞–π–º–∞—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 0, { badges: [Badges.mod] },"!mute [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]$user [–≤—Ä–µ–º—è —Ç–∞–π–º–∞—É—Ç–∞]$seconds [–ø—Ä–∏—á–∏–Ω–∞]$reason",
        { msg: "!mute morange51 60 —Å–ø–∞–º", badges: [Badges.broadcaster, Badges.glitch] },
        null, "basedgebot timed out morange51 for 60 seconds. Reason: —Å–ø–∞–º."),
    new Command({ cmd: "!spam" }, "–°–ø–∞–º —Ñ—Ä–∞–∑–æ–π", 3, { badges: [Badges.mod, Badges.vip] },"!spam [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]$amount [—Å–æ–æ–±—â–µ–Ω–∏–µ]$message",
        { msg: "!spam 5 –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º - t.me/", badges: [Badges.broadcaster, Badges.glitch] },
        { msg: ["–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º - t.me/", "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º - t.me/", "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º - t.me/", "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º - t.me/", "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º - t.me/"], badges: [Badges.mod, Badges.no_video]}),
    new Command({ cmd: "!unban" }, "–†–∞–∑–∂–∞–ª–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 0,{ badges: [Badges.mod] },"!unban [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]$user",
        { msg: "!unban morange51", badges: [Badges.broadcaster, Badges.glitch] },
        null, "basedgebot removed ban on morange51."),

];

const TestCommandsList = [
    new Command("test page")
];